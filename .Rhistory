}
# Bundle data
jags.data <- list( nobs = nrow(RIKZdat),
NAP.sc = as.numeric(scale(RIKZdat$NAP)),
exposure.sc = as.numeric(scale(RIKZdat$exposure)),
BchIndx = RIKZdat$Beach,
Richness = RIKZdat$Richness,
n.groups = length(unique(RIKZdat$Beach)))
# Parameters to estimate
parameters <- c( "beta1", "beta2", "b0", "beta0")
# Start Gibbs sampling
out.ri <- jags.parallel(data=jags.data,
parameters.to.save=parameters,
model=jags.lme,
n.thin=1, n.chains=3, n.burnin=1000, n.iter=10000)
summary(out.ri)
MCMCsummary(out.ri)
traplot(out.ri)
knitr::opts_chunk$set(echo = TRUE)
library(Data4Ecologists)
data("Fish_Mercury")
library(Data4Ecologists)
data("Fish_Mercury")
devtools::install_github("jfieberg/Data4Ecologists")
library(Data4Ecologists)
data("Fish_Mercury")
# RUN this chunk to make all other chunks less annoying
knitr::opts_chunk$set(echo = FALSE)
#library("rgdal")
library("raster")
#library("rgdal")
library("raster")
library("sf")
library("leafsync")
library("dplyr")
library("ggplot2")
library("stars")
library(spatialEco)
library(spatstat.random)
library(data.table)
library(geoR)
library(RColorBrewer)
library(spdep)
library(spatialreg)
library(classInt)
#library(rgeos)
library(landscapemetrics)
library(nimble)
library(coda)
library(prism)
library(terra)
library(maps)
library(raster)
library(pscl)
library(tidyverse)
library(CARBayesST)
library(INLAspacetime)
library(lme4)
library(INLA)
library(reshape2)
library(inlatools)
setwd("C:/Users/jackx/Desktop/cwd-project-2")
WIDat.hunt.y<-read.table("./data/WIDat.long.post.2007")
WIDat.hunt.y
wiTwnshpShp <- st_read("./data/shapefiles/PLSS_Townships/PLSS_Townships.shp")
wiTwnshpShp$uid <- paste0(wiTwnshpShp$TWP, "-", wiTwnshpShp$RNG, "-", wiTwnshpShp$DIR_ALPHA)
wiTwnshpShp <- wiTwnshpShp %>% filter(uid %in% WIDat.hunt.y$uid)
wiTwnshpShp
nrow(wiTwnshpShp)
WIDat.hunt.y <- WIDat.hunt.y %>% arrange(year, uid)
# analysis for long
WIDat.hunt.y$idarea <- as.numeric(as.factor(WIDat.hunt.y$uid))
WIDat.hunt.y$idarea2 <- as.numeric(as.factor(WIDat.hunt.y$uid))
WIDat.hunt.y$idtime <- 1 + as.numeric(WIDat.hunt.y$year) - min(as.numeric(WIDat.hunt.y$year))
WIDat.hunt.y$idtime2 <- 1 + as.numeric(WIDat.hunt.y$year) - min(as.numeric(WIDat.hunt.y$year))
cwdDat.wide <- reshape(WIDat.hunt.y, timevar="year", idvar=c("uid"), direction="wide")
wiStudyShp <- wiTwnshpShp
wiTwnshpPoly <- as(wiStudyShp, "Spatial")
map <- merge(wiTwnshpPoly, cwdDat.wide, by.x = "uid")
wiStudyShp <- wiStudyShp %>% arrange(uid)
wiStudyShp$uid
map <- merge(wiTwnshpPoly, cwdDat.wide, by.x = "uid")
nb <- poly2nb(map) # create nb object
nb2INLA("map.adj", nb)
g <- inla.read.graph(filename = "map.adj")
# create dataframes for joint analysis
x.0 <- data.frame(uid.0 = WIDat.hunt.y$uid,
year.0 = WIDat.hunt.y$year,
idtime.0 = WIDat.hunt.y$idtime,
idtime2.0 = WIDat.hunt.y$idtime,
idtime3.0= WIDat.hunt.y$idtime,
idarea.0 = WIDat.hunt.y$idarea,
idarea2.0 = WIDat.hunt.y$idarea,
wsi.0 = WIDat.hunt.y$wsi,
x.0 = WIDat.hunt.y$x,
y.0 = WIDat.hunt.y$y,
nSamp.0 = WIDat.hunt.y$nSamp,
cv.diff.0 = WIDat.hunt.y$cv.diff,
fd.diff.0 = WIDat.hunt.y$nMY,
fd.diff.0 = WIDat.hunt.y$fd.diff,
fd.diff.0 = WIDat.hunt.y$fd.diff,
fd.diff.0 = WIDat.hunt.y$fd.diff,
prop.MA.0 = WIDat.hunt.y$prop.MA,
prop.MY.0 = WIDat.hunt.y$prop.MY,
prop.FA.0 = WIDat.hunt.y$prop.FA,
prop.FY.0 = WIDat.hunt.y$prop.FY,
nMA.0 = WIDat.hunt.y$nMA,
nMY.0 = WIDat.hunt.y$nMY,
nFA.0 = WIDat.hunt.y$nFA,
nFY.0 = WIDat.hunt.y$nFY,
nPMA.0 = WIDat.hunt.y$nPMA,
nPMY.0 = WIDat.hunt.y$nPMY,
nPFA.0 = WIDat.hunt.y$nPFA,
nPFY.0 = WIDat.hunt.y$nPFY,
nPos.t.minus.1.0 = WIDat.hunt.y$nPos.t.minus.1,
snopack.max.0 = WIDat.hunt.y$snopackMax,
numDays0sno.0 = WIDat.hunt.y$numDays0sno,
numDayssno.0 = WIDat.hunt.y$numDays,
wsi.early.0 = WIDat.hunt.y$wsi.early,
wsi.ttl.0 = WIDat.hunt.y$wsi.ttl,
wsi.late.0 = WIDat.hunt.y$wsi.late,
pop.0 = WIDat.hunt.y$pop
)
x.c <- data.frame(uid.c = WIDat.hunt.y$uid,
year.c = WIDat.hunt.y$year,
idtime.c = WIDat.hunt.y$idtime,
idtime3.c =WIDat.hunt.y$idtime,
idtime2.c = WIDat.hunt.y$idtime,
idarea.c = WIDat.hunt.y$idarea,
idarea2.c = WIDat.hunt.y$idarea,
wsi.c = WIDat.hunt.y$wsi,
x.c = WIDat.hunt.y$x,
y.c = WIDat.hunt.y$y,
nSamp.c = WIDat.hunt.y$nSamp,
cv.diff.c = WIDat.hunt.y$cv.diff,
fd.diff.c = WIDat.hunt.y$fd.diff,
prop.MA.c = WIDat.hunt.y$prop.MA,
prop.MY.c = WIDat.hunt.y$prop.MY,
prop.FA.c = WIDat.hunt.y$prop.FA,
prop.FY.c = WIDat.hunt.y$prop.FY,
nMA.c = WIDat.hunt.y$nMA,
nMY.c = WIDat.hunt.y$nMY,
nFA.c = WIDat.hunt.y$nFA,
nFY.c = WIDat.hunt.y$nFY,
nPMA.c = WIDat.hunt.y$nPMA,
nPMY.c = WIDat.hunt.y$nPMY,
nPFA.c = WIDat.hunt.y$nPFA,
nPFY.c = WIDat.hunt.y$nPFY,
nPos.t.minus.1.c = WIDat.hunt.y$nPos.t.minus.1,
snopack.max.c = WIDat.hunt.y$snopackMax,
numDays0sno.c = WIDat.hunt.y$numDays0sno,
numDayssno.c = WIDat.hunt.y$numDays,
wsi.early.c = WIDat.hunt.y$wsi.early,
wsi.ttl.c = WIDat.hunt.y$wsi.ttl,
wsi.late.c = WIDat.hunt.y$wsi.late,
pop.c = WIDat.hunt.y$pop
)
stack.c <- inla.stack(
tag="fit.c",
data=list(all.prev=cbind(WIDat.hunt.y$nPos.c,NA)),
A = list(1),
effects = list(
x.c = as.data.frame(x.c)
)
)
stack.0 <- inla.stack(
tag="fit.0",
data=list(all.prev=cbind(NA,WIDat.hunt.y$nPos.z)),
A = list(1),
effects = list(
x.0 = as.data.frame(x.0)
))
stack.t <- inla.stack(stack.c, stack.0)
f.hurdle.wsi.total <- all.prev ~ -1 +
offset(nSamp.c) + prop.MA.c + f(idtime2.0, model="iid") + f(idtime2.c, model="iid") +
scale(wsi.ttl.0) + f(idarea.c, model = "bym", graph = g, scale.model=TRUE) +
scale(cv.diff.c) + f(idtime3.c, model="ar1") + f(idtime3.0, model="ar1") +
scale(wsi.ttl.c) + scale(cv.diff.0) + f(idarea.0, model = "bym", graph = g, scale.model=TRUE) + scale(pop.0) + scale(pop.c) + offset(nSamp.0) + prop.MA.0
f.hurdle.max.snopack <- all.prev ~ -1 + scale(pop.c) +
offset(nSamp.c) + prop.MA.c + f(idtime2.0, model="iid") + f(idtime2.c, model="iid") +
scale(snopack.max.c) + f(idarea.c, model = "bym", graph = g, scale.model=TRUE) +
scale(cv.diff.c) + f(idtime3.c, model="ar1") + f(idtime3.0, model="ar1") +
scale(snopack.max.0) + scale(cv.diff.0) + f(idarea.0, model = "bym", graph = g, scale.model=TRUE) + prop.MA.0 + scale(pop.0) + offset(nSamp.0)
hurdle.out.max.snopack<-inla(f.hurdle.max.snopack,
family=c("zeroinflatednbinomial0", "binomial"),                                                       data=inla.stack.data(stack.t),                                                   control.compute=list(dic=TRUE,waic=TRUE), control.predictor=list(link=1,A=inla.stack.A(stack.t)),
control.inla=list(strategy='simplified.laplace'))
summary(hurdle.out.max.snopack)
f.hurdle.0.sno <- all.prev ~ -1 +
offset(nSamp.c) + prop.MA.c + f(idtime2.0, model="iid") + f(idtime2.c, model="iid") +
scale(numDays0sno.c) + f(idarea.c, model = "bym", graph = g, scale.model=TRUE) +
scale(cv.diff.c) + f(idtime3.c, model="ar1") + f(idtime3.0, model="ar1") +
scale(numDays0sno.0) + scale(cv.diff.0) + f(idarea.0, model = "bym", graph = g, scale.model=TRUE) + prop.MA.0 + scale(pop.0) + scale(pop.c)
hurdle.out.0.sno<-inla(f.hurdle.0.sno,
family=c("zeroinflatednbinomial0", "binomial"),                                                       data=inla.stack.data(stack.t),                                                   control.compute=list(dic=TRUE,waic=TRUE), control.predictor=list(link=1,A=inla.stack.A(stack.t)),
control.inla=list(strategy='simplified.laplace'))
f.hurdle.0.sno <- all.prev ~ -1 +
offset(nSamp.c) + prop.MA.c + f(idtime2.0, model="iid") + f(idtime2.c, model="iid") +
scale(numDays0sno.c) + f(idarea.c, model = "bym", graph = g, scale.model=TRUE) +
scale(cv.diff.c) + f(idtime3.c, model="ar1") + f(idtime3.0, model="ar1") +
scale(numDays0sno.0) + scale(cv.diff.0) +
f(idarea.0, model = "bym", graph = g, scale.model=TRUE) +
prop.MA.0 + scale(pop.0) + scale(pop.c) + offset(nSamp.0)
hurdle.out.0.sno<-inla(f.hurdle.0.sno,
family=c("zeroinflatednbinomial0", "binomial"),                                                       data=inla.stack.data(stack.t),                                                   control.compute=list(dic=TRUE,waic=TRUE), control.predictor=list(link=1,A=inla.stack.A(stack.t)),
control.inla=list(strategy='simplified.laplace'))
f.hurdle.0.sno <- all.prev ~ -1 +
offset(nSamp.c) + prop.MA.c + f(idtime2.0, model="iid") + f(idtime2.c, model="iid") +
scale(numDays0sno.c) + f(idarea.c, model = "bym", graph = g, scale.model=TRUE) +
f(idtime3.c, model="ar1") + f(idtime3.0, model="ar1") +
scale(numDays0sno.0) +
f(idarea.0, model = "bym", graph = g, scale.model=TRUE) +
prop.MA.0 + scale(pop.0) + scale(pop.c) + offset(nSamp.0)
hurdle.out.0.sno<-inla(f.hurdle.0.sno,
family=c("zeroinflatednbinomial0", "binomial"),                                                       data=inla.stack.data(stack.t),                                                   control.compute=list(dic=TRUE,waic=TRUE), control.predictor=list(link=1,A=inla.stack.A(stack.t)),
control.inla=list(strategy='simplified.laplace'))
summary(hurdle.out.0.sno)
hurdle.out.wsi.total<-inla(f.hurdle.wsi.total,
family=c("zeroinflatednbinomial0", "binomial"),                                                       data=inla.stack.data(stack.t),                                                   control.compute=list(dic=TRUE,waic=TRUE), control.predictor=list(link=1,A=inla.stack.A(stack.t)),
control.inla=list(strategy='simplified.laplace'))
hurdle.out.wsi.total<-inla(f.hurdle.wsi.total,
family=c("zeroinflatednbinomial0", "binomial"),                                                       data=inla.stack.data(stack.t),                                                   control.compute=list(dic=TRUE,waic=TRUE), control.predictor=list(link=1,A=inla.stack.A(stack.t)),
control.inla=list(strategy='simplified.laplace'))
summary(hurdle.out.wsi.total)
f.hurdle.wsi.total <- all.prev ~ -1 +
offset(nSamp.c) + prop.MA.c + f(idtime2.0, model="iid") + f(idtime2.c, model="iid") +
scale(wsi.ttl.0) + f(idarea.c, model = "bym", graph = g, scale.model=TRUE) +
f(idtime3.c, model="ar1") + f(idtime3.0, model="ar1") +
scale(wsi.ttl.c) + f(idarea.0, model = "bym", graph = g, scale.model=TRUE) + scale(pop.0) + scale(pop.c) + offset(nSamp.0) + prop.MA.0
hurdle.out.wsi.total<-inla(f.hurdle.wsi.total,
family=c("zeroinflatednbinomial0", "binomial"),                                                       data=inla.stack.data(stack.t),                                                   control.compute=list(dic=TRUE,waic=TRUE), control.predictor=list(link=1,A=inla.stack.A(stack.t)),
control.inla=list(strategy='simplified.laplace'))
summary(hurdle.out.wsi.total)
f.hurdle.wsi.late <- all.prev ~ -1 +
offset(nSamp.c) + prop.MA.c + f(idtime2.0, model="iid") + f(idtime2.c, model="iid") +
scale(wsi.late.c) + f(idarea.c, model = "bym", graph = g, scale.model=TRUE) +
f(idtime3.c, model="ar1") + f(idtime3.0, model="ar1") +
scale(wsi.late.0) + f(idarea.0, model = "bym", graph = g, scale.model=TRUE) +
prop.MA.0 + scale(pop.0) + scale(pop.c) + offset(nSamp.0)
hurdle.out.wsi.late<-inla(f.hurdle.wsi.late,
family=c("zeroinflatednbinomial0", "binomial"),                                                       data=inla.stack.data(stack.t),                                                   control.compute=list(dic=TRUE,waic=TRUE), control.predictor=list(link=1,A=inla.stack.A(stack.t)),
control.inla=list(strategy='simplified.laplace'))
summary(hurdle.out.wsi.late)
f.hurdle.max.snopack <- all.prev ~ -1 + scale(pop.c) +
offset(nSamp.c) + prop.MA.c + f(idtime2.0, model="iid") + f(idtime2.c, model="iid") +
scale(snopack.max.c) + f(idarea.c, model = "bym", graph = g, scale.model=TRUE) +
f(idtime3.c, model="ar1") + f(idtime3.0, model="ar1") +
scale(snopack.max.0) + f(idarea.0, model = "bym", graph = g, scale.model=TRUE)
f.hurdle.max.snopack <- all.prev ~ -1 + scale(pop.c) +
offset(nSamp.c) + prop.MA.c + f(idtime2.0, model="iid") + f(idtime2.c, model="iid") +
scale(snopack.max.c) + f(idarea.c, model = "bym", graph = g, scale.model=TRUE) +
f(idtime3.c, model="ar1") + f(idtime3.0, model="ar1") +
scale(snopack.max.0) + f(idarea.0, model = "bym", graph = g, scale.model=TRUE)+
prop.MA.0 + scale(pop.0) + offset(nSamp.0)
hurdle.out.max.snopack<-inla(f.hurdle.max.snopack,
family=c("zeroinflatednbinomial0", "binomial"),                                                       data=inla.stack.data(stack.t),                                                   control.compute=list(dic=TRUE,waic=TRUE), control.predictor=list(link=1,A=inla.stack.A(stack.t)),
control.inla=list(strategy='simplified.laplace'))
summary(hurdle.out.snopack.max)
summary(hurdle.out.max.snopack)
f.hurdle.num.sno.days <- all.prev ~ -1 +
offset(nSamp.c) + prop.MA.c + f(idtime2.0, model="iid") +
f(idtime2.c, model="iid") + scale(numDayssno.c) +
f(idarea.c, model = "bym", graph = g, scale.model=TRUE) +
f(idtime3.c, model="ar1") + f(idtime3.0, model="ar1") +
scale(numDayssno.0) + f(idarea.0, model = "bym", graph = g, scale.model=TRUE) +
prop.MA.0 + scale(pop.0) + scale(pop.c) + offset(nSamp.0)
hurdle.out.num.snodays<-inla(f.hurdle.num.sno.days,
family=c("zeroinflatednbinomial0", "binomial"),                                                       data=inla.stack.data(stack.t),                                                   control.compute=list(dic=TRUE,waic=TRUE), control.predictor=list(link=1,A=inla.stack.A(stack.t)),
control.inla=list(strategy='simplified.laplace'))
summary(hurdle.out.num.snodays)
summary(hurdle.out.wsi.total)
WIDat.hunt.y$wsi.ttl
plot(WIDat.hunt.y$wsi.ttl~WIDat.hunt.y$year)
plot(mean(WIDat.hunt.y$wsi.ttl)~WIDat.hunt.y$year)
wsiYearDat <- data.frame(wsi=0, yaer=unique(WIDat.hunt.y$year))
wsiYearDat <- data.frame(wsi=0, year=unique(WIDat.hunt.y$year))
wsiYearDat
for(i in 1:length(unique(WIDat.hunt.y$year))){
wsiYearDat[i,]$wsi <- mean(WIDat.hunt.y$wsi.ttl %>% filter(year==year[i]))}
for(i in 1:length(unique(WIDat.hunt.y$year))){
wsiYearDat[i,]$wsi <- mean(as.numeric(WIDat.hunt.y$wsi.ttl %>% filter(year==year[i])))}
wsiYearDat[i,]$wsi <- mean(as.numeric(c(WIDat.hunt.y$wsi.ttl %>% filter(year==year[i]))))}
wsiYearDat[i,]$wsi <- mean(as.numeric(c(WIDat.hunt.y$wsi.ttl %>% filter(year==year[i])))}
wsiYearDat[i,]$wsi <- mean(as.numeric(c(WIDat.hunt.y$wsi.ttl %>% filter(year==year[i]))))}
wsiYearDat[i,]$wsi <- mean(as.numeric(c(WIDat.hunt.y$wsi.ttl %>% filter(year==year[i]))))
for(i in 1:length(unique(WIDat.hunt.y$year))){
wsiYearDat[i,]$wsi <- mean(as.numeric(c(WIDat.hunt.y$wsi.ttl %>% filter(year==year[i]))))
}
for(i in 1:length(unique(WIDat.hunt.y$year))){
wsiYearDat[i,]$wsi <- mean(as.numeric(as.vector(WIDat.hunt.y %>% filter(year==year[i]) %>% dplyr::select(wsi.ttl))))
}
for(i in 1:length(unique(WIDat.hunt.y$year))){
wsiYearDat[i,]$wsi <- mean(as.numeric(as.vector(WIDat.hunt.y %>% filter(year==year[i]) %>% dplyr::select(wsi.ttl))))
}
for(i in 1:length(unique(WIDat.hunt.y$year))){
wsi<- mean(as.numeric(as.vector(WIDat.hunt.y %>% filter(year==year[i]) %>% dplyr::select(wsi.ttl))))
}
for(i in 1:length(unique(WIDat.hunt.y$year))){
wsi<- mean(as.vector(WIDat.hunt.y %>% filter(year==year[i]) %>% dplyr::select(wsi.ttl)))
}
for(i in 1:length(unique(WIDat.hunt.y$year))){
wsi
for(i in 1:length(unique(WIDat.hunt.y$year))){
wsi<- mean(as.vector(WIDat.hunt.y %>% filter(year==year[i]) %>% dplyr::select(wsi.ttl)),na.rm=TRUE)
}
wsi
WIDat.hunt.y %>% filter(year==2008)
WIDat.hunt.y %>% filter(year==2008) %>% dplyr::select(wsi.ttl)
mean(WIDat.hunt.y %>% filter(year==2008) %>% dplyr::select(wsi.ttl))
mean(WIDat.hunt.y %>% filter(year==2008) %>% dplyr::select(wsi.ttl),na.rm=TRUE)
mean(as.vector(WIDat.hunt.y %>% filter(year==2008) %>% dplyr::select(wsi.ttl)),na.rm=TRUE)
mean(WIDat.hunt.y %>% filter(year==2008) %>% dplyr::select(wsi.ttl))
for(i in 1:length(unique(WIDat.hunt.y$year))){
WIDat.hunt.y[which(WIDat.hunt.y$year==year[i]),]}
for(i in 1:length(unique(WIDat.hunt.y$year))){
mean(WIDat.hunt.y[which(WIDat.hunt.y$year==year[i]),]$wsi.ttl)}
for(i in 1:length(unique(WIDat.hunt.y$year))){
wsiYearDat[i,]$wsi<-mean(WIDat.hunt.y[which(WIDat.hunt.y$year==year[i]),]$wsi.ttl)}
wsiYearDat
for(i in 1:length(unique(WIDat.hunt.y$year))){
wsiYearDat[i,]$wsi<-mean(WIDat.hunt.y[which(WIDat.hunt.y$year==year[i]),]$wsi.ttl, na.rm=TRUE)}
wsiYearDat
i
year[i]
years <- unique(WIDat.hunt.y$year)
years
for(i in 1:length(unique(WIDat.hunt.y$year))){
wsiYearDat[i,]$wsi<-mean(WIDat.hunt.y[which(WIDat.hunt.y$year==years[i]),]$wsi.ttl, na.rm=TRUE)}
wsiYearDat
plot(wsiYearDat$wsi~wsiYearDat$year)
plot(wsiYearDat$wsi~wsiYearDat$year,type-"l")
plot(wsiYearDat$wsi~wsiYearDat$year,type="l")
hurdle.out.0.sno
summary(hurdle.out.0.sno)
inla.posterior.sample(hurdle.out.wsi.total, selection=c(numDays0sno.0))
inla.posterior.sample(hurdle.out.wsi.total, selection=c(numDays0sno.0=1))
inla.posterior.sample(hurdle.out.wsi.total, selection=c(scale(numDays0sno.0)=1))
inla.posterior.sample(hurdle.out.wsi.total, selection=list(scale(numDays0sno.0)=1))
inla.posterior.sample(hurdle.out.wsi.total, selection=list(numDays0sno.0=1))
inla.posterior.sample(100,hurdle.out.wsi.total, selection=list(numDays0sno.0=1))
hurdle.out.wsi.total<-inla(f.hurdle.wsi.total,
family=c("zeroinflatednbinomial0", "binomial"),                                                       data=inla.stack.data(stack.t),                                                   control.compute=list(dic=TRUE,waic=TRUE, config=TRUE), control.predictor=list(link=1,A=inla.stack.A(stack.t)),
control.inla=list(strategy='simplified.laplace'))
inla.posterior.sample(100,hurdle.out.wsi.total, selection=list(numDays0sno.0=1))
inla.posterior.sample(100,hurdle.out.wsi.total, selection=list(scale(numDays0sno.0)=1))
inla.posterior.sample(100,hurdle.out.wsi.total, selection=list(wsi.total.0=1))
post.samp <- inla.posterior.sample(100,hurdle.out.wsi.total, selection=list(wsi.total.0=1))
hurdle.out.wsi.total
summary(hurdle.out.wsi.total)
post.samp <- inla.posterior.sample(100,hurdle.out.wsi.total, selection=list(wsi.ttl.c=1))
hurdle.out.wsi.total$names.fixed
post.samp <- inla.posterior.sample(100,hurdle.out.wsi.total, selection=list("scale(wsi.ttl.c)"=1))
post.samp
names(post.samp)[[1]]
names(post.samp)
post.samp[[1]]
post.samp[[1]]$latent
post.samp[[2]]
post.samp[[2]]$latent
post.samp[[100]]$latent
post.samp[[101]]$latent
hurdle.out.wsi.total$summary.fixed$mean
length(hurdle.out.wsi.total$summary.fitted.values)
nrow(hurdle.out.wsi.total$summary.fitted.values)
hurdle.out.wsi.total$marginals.fixed
hurdle.out.wsi.total$marginals.fixed$`scale(wsi.ttl.c)`
nrow(hurdle.out.wsi.total$marginals.fixed$`scale(wsi.ttl.c))
)
nrow(hurdle.out.wsi.total$marginals.fixed$`scale(wsi.ttl.c))`
hurdle.out.wsi.total$marginals.fixed$`scale(wsi.ttl.c)`
nrow(hurdle.out.wsi.total$marginals.fixed$`scale(wsi.ttl.c)`)
inla.pmarginal(0, hurdle.out.wsi.total$marginals.fixed$`scale(wsi.ttl.c)`)
1-inla.pmarginal(0, hurdle.out.wsi.total$marginals.fixed$`scale(wsi.ttl.c)`)
f.hurdle.wsi.total <- all.prev ~ -1 +
offset(log(nSamp.c)) + prop.MA.c + f(idtime2.0, model="iid") + f(idtime2.c, model="iid") +
scale(wsi.ttl.0) + f(idarea.c, model = "bym", graph = g, scale.model=TRUE) +
f(idtime3.c, model="ar1") + f(idtime3.0, model="ar1") +
scale(wsi.ttl.c) + f(idarea.0, model = "bym", graph = g, scale.model=TRUE) + scale(pop.0) + scale(pop.c) + offset(log(nSamp.0)) + prop.MA.0
hurdle.out.wsi.total<-inla(f.hurdle.wsi.total,
family=c("zeroinflatednbinomial0", "binomial"),                                                       data=inla.stack.data(stack.t),                                                   control.compute=list(dic=TRUE,waic=TRUE, config=TRUE), control.predictor=list(link=1,A=inla.stack.A(stack.t)),
control.inla=list(strategy='simplified.laplace'))
summary(hurdle.out.wsi.total)
names(WIDat.hunt.y)
f.hurdle.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2.0, model="iid") + f(idtime2, model="iid") + scale(wsi.ttl) +
f(idarea, model = "bym", graph = g, scale.model=TRUE) + f(idtime3, model="ar1") + scale(pop)
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
model="iid") + scale(wsi.ttl) +
f.hurdle.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2, model="iid") + scale(wsi.ttl) + f(idarea, model = "bym", graph = g, scale.model=TRUE) +
f(idtime3, model="ar1") + scale(pop)
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
WIDat.hunt.y$idtime3 <- 1 + as.numeric(WIDat.hunt.y$year) - min(as.numeric(WIDat.hunt.y$year))
cwdDat.wide <- reshape(WIDat.hunt.y, timevar="year", idvar=c("uid"), direction="wide")
wiTwnshpPoly <- as(wiStudyShp, "Spatial")
map <- merge(wiTwnshpPoly, cwdDat.wide, by.x = "uid")
nb <- poly2nb(map) # create nb object
nb2INLA("map.adj", nb)
g <- inla.read.graph(filename = "map.adj")
f.hurdle.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2, model="iid") + scale(wsi.ttl) + f(idarea, model = "bym", graph = g, scale.model=TRUE) +
f(idtime3, model="ar1") + scale(pop)
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
names(WIDat.hunt.y)
f.hurdle.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2, model="iid") + scale(wsi.ttl) + f(idarea, model = "bym", graph = g, scale.model=TRUE) +
f(idtime, model="ar1") + scale(pop)
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
summary(out.negbin)
f.hurdle.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2, model="iid") + scale(wsi.ttl) + f(idarea, model = "bym", graph = g, scale.model=TRUE) +
f(idtime, model="ar1") + scale(pop) + scale(cv.diff)
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
summary(out.negbin)
f.hurdle.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2, model="iid") + scale(wsi.ttl) + f(idarea, model = "bym", graph = g, scale.model=TRUE) +
f(idtime, model="ar1") + scale(pop)
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
f.hurdle.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2, model="iid") + scale(wsi.ttl) + f(idarea, model = "bym", graph = g, scale.model=TRUE) +
f(idtime, model="ar1") + scale(pop)
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
f.hurdle.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2, model="iid") + scale(wsi.ttl) + f(idarea, model = "bym", graph = g, scale.model=TRUE) +
f(idtime, model="ar1") + scale(pop)
f.hurdle.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2, model="iid") + scale(wsi.ttl) + f(idarea, model = "bym", graph = g, scale.model=TRUE) + f(idtime, model="ar1") + scale(pop)
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
summary(out.negbin)
summary(hurdle.out.wsi.total)
f.hurdle.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2, model="iid") + scale(wsi.ttl) + f(idarea, model = "bym", graph = g, scale.model=TRUE) + f(idtime, model="ar1") + scale(pop) + fd.diff
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
summary(f.hurdle.negbin)
summary(out.negbin)
f.hurdle.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2, model="iid") + scale(wsi.ttl) + f(idarea, model = "bym", graph = g, scale.model=TRUE) + f(idtime, model="ar1") + scale(pop)
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
f.hurdle.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2, model="iid") + scale(wsi.ttl) + f(idarea, model = "bym", graph = g, scale.model=TRUE) + f(idtime, model="ar1") + scale(pop)
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
cwdYearDat <- data.frame(cwdCases=0,
year=unique(WIDat.hunt.y$year))
years<-unique(WIDat.hunt.y$years)
for(i in 1:length(years)){
cwdYearDat[i,]$cwdCases<-mean(WIDat.hunt.y[which(WIDat.hunt.y$year==years[i]),]$nPos, na.rm=TRUE)
}
for(i in 1:length(years)){
cwdYearDat[i,]$cwdCases<-mean(WIDat.hunt.y[which(WIDat.hunt.y$year==years[i]),]$nPos, na.rm=TRUE)
}
years[1]
years<-unique(WIDat.hunt.y$years)
years
years<-unique(WIDat.hunt.y$year)
for(i in 1:length(years)){
cwdYearDat[i,]$cwdCases<-mean(WIDat.hunt.y[which(WIDat.hunt.y$year==years[i]),]$nPos, na.rm=TRUE)
}
cwdYearDat
for(i in 1:length(years)){
cwdYearDat[i,]$cwdCases<-sum(WIDat.hunt.y[which(WIDat.hunt.y$year==years[i]),]$nPos, na.rm=TRUE)
}
cwdYearDat
pacfT<-acf(cwdYearDat, type="partial")
pacfT<-acf(cwdYearDat$cwdCases, type="partial")
plot(pacf,main="Partial Autocorrelation of observed CWD Cases for Females (2008-2021)")
plot(pacfT,main="Partial Autocorrelation of Observed (M/F) CWD Cases (2008-2021)")
plot(pacfT,main="Partial Autocorrelation of Observed CWD Cases (2008-2021)")
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
f.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2, model="iid") +
scale(wsi.ttl) + f(idarea, model = "bym", graph = g, scale.model=TRUE)
f.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2, model="iid") +
scale(wsi.ttl) + f(idarea, model = "bym", graph = g, scale.model=TRUE) +
f(idtime, model="ar1") + scale(pop)
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
f.negbin <- nPos ~ -1 + offset(log(nSamp)) + prop.MA + f(idtime2, model="iid") + scale(wsi.ttl) + f(idarea, model = "bym", graph = g, scale.model=TRUE) + f(idtime, model="ar1") + scale(pop)
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
out.negbin
summary(out.negbin)
out.negbin$summary.random
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("zeroinlfatednbinomial1"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("zeroinflatednbinomial0"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1))
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("zeroinflatednbinomial0"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1), control.inla=list('simplified.laplace'))
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("zeroinflatednbinomial0"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1), control.inla=list(strategy='simplified.laplace'))
# fit WSI total with no joint
out.negbin<-inla(f.hurdle.negbin, family=c("nbinomial"), data=WIDat.hunt.y, control.compute=list(dic=TRUE,waic=TRUE,config=TRUE),
control.predictor=list(link=1), control.inla=list(strategy='simplified.laplace'))
